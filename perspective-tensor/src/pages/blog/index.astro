---
import BaseLayout from '../../layouts/BaseLayout.astro';
import StructuredData from '../../components/StructuredData.astro';
import { getCollection } from 'astro:content';

const posts = await getCollection('blog', ({ data }) => data.draft !== true);

// Sort posts by date (newest first)
posts.sort((a, b) => {
  const dateA = a.data.pubDate || new Date(0);
  const dateB = b.data.pubDate || new Date(0);
  return dateB.getTime() - dateA.getTime();
});

const blogData = {
  "@type": "Blog",
  name: "Perspective Tensor Blog",
  description: "Thoughts on AI, machine learning, complexity theory, and data science",
  url: "https://perspective-tensor.dev/blog",
  author: {
    "@type": "Person",
    name: "Lin Wang",
    url: "https://perspective-tensor.dev"
  },
  blogPosts: posts.map(post => ({
    "@type": "BlogPosting",
    headline: post.data.title || post.id,
    description: post.data.description || '',
    datePublished: post.data.pubDate?.toISOString(),
    author: {
      "@type": "Person",
      name: post.data.author || "Lin Wang"
    },
    url: `https://perspective-tensor.dev/blog/${post.id}`
  }))
};
---
<BaseLayout 
  title="Blog" 
  description="Thoughts on AI, machine learning, complexity theory, and data science through a first principles lens."
>
  <StructuredData type="Blog" data={blogData} />
  
  <div class="max-w-3xl mx-auto px-4">
    <!-- Back navigation -->
    <div class="mb-12">
      <a 
        href="/"
        class="inline-flex items-center gap-1.5 text-sm text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors duration-300 group"
        data-astro-history="push"
      >
        <svg class="w-3.5 h-3.5 transition-transform duration-300 group-hover:-translate-x-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
        </svg>
        <span class="font-light">Home</span>
      </a>
    </div>
    
    <!-- Post list -->
    <div class="space-y-2">
      {posts.map((post) => (
        <article>
          <a 
            href={`/blog/${post.id}`} 
            class="block py-5 px-4 -mx-4 rounded-lg transition-all duration-500 ease-out hover:translate-x-1 hover:shadow-lg hover:shadow-gray-200/20 dark:hover:shadow-black/30 group"
            data-astro-history="push"
          >
            <div class="flex items-start justify-between gap-6">
              <div class="flex-1 min-w-0">
                <h2 class="text-lg font-light text-gray-900 dark:text-gray-100 mb-1.5 leading-snug">
                  {post.data.title ?? post.id}
                </h2>
                
                {post.data.description && (
                  <p class="text-sm text-gray-600 dark:text-gray-400 leading-relaxed font-light line-clamp-2">
                    {post.data.description}
                  </p>
                )}
              </div>
              
              {post.data.pubDate && (
                <time 
                  class="text-xs text-gray-500 dark:text-gray-400 font-light whitespace-nowrap pt-0.5 min-w-[4rem] text-right" 
                  datetime={post.data.pubDate.toISOString()}
                >
                  {post.data.pubDate.toLocaleDateString('en-US', { 
                    month: 'short',
                    day: 'numeric',
                    year: post.data.pubDate.getFullYear() !== new Date().getFullYear() ? 'numeric' : undefined
                  })}
                </time>
              )}
            </div>
          </a>
        </article>
      ))}
    </div>
    
    {posts.length === 0 && (
      <div class="text-center py-20">
        <p class="text-gray-500 dark:text-gray-400 font-light">
          No posts yet. Check back soon for insights and explorations.
        </p>
      </div>
    )}
  </div>
</BaseLayout>
---
import BaseLayout from '../../layouts/BaseLayout.astro';
import StructuredData from '../../components/StructuredData.astro';
import Tag from '../../components/Tag.astro';
import { getCollection } from 'astro:content';

// Get all growth posts
const growthPosts = await getCollection('growth', ({ data }) => data.draft !== true);

// Sort by date (newest first)
growthPosts.sort((a, b) => {
  const dateA = a.data.pubDate || new Date(0);
  const dateB = b.data.pubDate || new Date(0);
  return dateB.getTime() - dateA.getTime();
});

// Structured data for the growth section
const growthData = {
  "@type": "CollectionPage",
  name: "Growth: Leadership & Development",
  description: "Insights on engineering leadership, team building, career development, and the human side of technology.",
  url: new URL('/growth', Astro.site || 'https://perspective-tensor.dev'),
  mainEntity: {
    "@type": "ItemList",
    itemListElement: growthPosts.map((post, index) => ({
      "@type": "Article",
      position: index + 1,
      name: post.data.title || post.id,
      description: post.data.description,
      url: new URL(`/growth/${post.id}`, Astro.site || 'https://perspective-tensor.dev'),
      datePublished: post.data.pubDate?.toISOString()
    }))
  }
};
---

<BaseLayout 
  title="Growth" 
  description="Leadership, development, and the human side of technology"
>
  <StructuredData type="CollectionPage" data={growthData} />
  
  <div class="mx-auto px-4">
    <!-- Header -->
    <header class="mb-12">
      <div class="flex items-center gap-3 mb-4">
        <a 
          href="/"
          class="text-sm text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors font-light"
          data-astro-history="push"
        >
          Home
        </a>
        <span class="text-gray-400 dark:text-gray-600">/</span>
        <span class="text-sm text-gray-900 dark:text-gray-100 font-light">Growth</span>
      </div>
      
      <h1 class="text-3xl font-light text-gray-900 dark:text-gray-100 mb-4">
        Growth & Leadership
      </h1>
      <p class="text-base text-gray-600 dark:text-gray-400 font-light max-w-2xl">
        Reflections on engineering leadership, team dynamics, career development, and the soft skills that amplify technical excellence.
      </p>
    </header>
    
    <!-- Growth Posts -->
    <div class="space-y-8">
      {growthPosts.length === 0 ? (
        <div class="text-center py-16">
          <p class="text-gray-500 dark:text-gray-400 font-light mb-4">
            Leadership and development insights coming soon.
          </p>
          <p class="text-sm text-gray-400 dark:text-gray-500 font-light">
            Thoughts on building teams, growing careers, and the human side of technical work.
          </p>
        </div>
      ) : (
        growthPosts.map((post) => (
          <article class="group">
            <a 
              href={`/growth/${post.id}`}
              class="block p-6 rounded-lg border border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600 transition-all duration-300 hover:shadow-sm"
              data-astro-history="push"
            >
              <div class="flex items-start justify-between mb-3">
                <h2 class="text-xl font-light text-gray-900 dark:text-gray-100 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
                  {post.data.title || post.id}
                </h2>
                {post.data.pubDate && (
                  <time 
                    class="text-xs text-gray-500 dark:text-gray-400 font-light whitespace-nowrap ml-4" 
                    datetime={post.data.pubDate.toISOString()}
                  >
                    {post.data.pubDate.toLocaleDateString('en-US', { 
                      month: 'short',
                      day: 'numeric',
                      year: 'numeric'
                    })}
                  </time>
                )}
              </div>
              
              {post.data.description && (
                <p class="text-sm text-gray-600 dark:text-gray-400 font-light mb-3 leading-relaxed">
                  {post.data.description}
                </p>
              )}
              
              {post.data.topics && post.data.topics.length > 0 && (
                <div class="flex flex-wrap gap-2">
                  {post.data.topics.map((topic: string) => (
                    <Tag text={topic} />
                  ))}
                </div>
              )}
            </a>
          </article>
        ))
      )}
    </div>
  </div>
</BaseLayout>